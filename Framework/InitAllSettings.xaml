<Activity mc:Ignorable="sap sap2010 sads" x:Class="InitiAllSettings" this:InitiAllSettings.in_ConfigFile="Data\Config.xlsx" this:InitiAllSettings.in_ConfigSheets="[{&quot;Settings&quot;,&quot;Constants&quot;}]"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:this="clr-namespace:"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_ConfigFile" Type="InArgument(x:String)" />
    <x:Property Name="in_ConfigSheets" Type="InArgument(s:String[])" />
    <x:Property Name="out_Config" Type="OutArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="out_RobotHomeDirectory" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>GetAllSettings_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Core.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>TimeSpan2</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Cryptography</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Java.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="This workflow outputs a settings Dictionary with key/value pairs to be used in the project. Settings are read from local config file then fetched from Orchestrator assets. &#xA;Assets will overwrite the config file settings" DisplayName="Get All Settings" sap2010:WorkflowViewState.IdRef="Sequence_23">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="processLogs" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="applicationLogs" />
      <Variable x:TypeArguments="ui:GenericValue" Name="userDirectory" />
      <Variable x:TypeArguments="x:String" Name="WorkingEnvironment" />
    </Sequence.Variables>
    <Assign DisplayName="New dictionary" sap2010:WorkflowViewState.IdRef="Assign_27">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[out_Config]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[new Dictionary(of String, object)]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="New dictionary" sap2010:WorkflowViewState.IdRef="Assign_33">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[processLogs]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[new Dictionary(of String, object)]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="New dictionary" sap2010:WorkflowViewState.IdRef="Assign_34">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[applicationLogs]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[new Dictionary(of String, object)]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign userDirectory" sap2010:WorkflowViewState.IdRef="Assign_38">
      <Assign.To>
        <OutArgument x:TypeArguments="ui:GenericValue">[userDirectory]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="ui:GenericValue">[Path.GetDirectoryName(Directory.GetParent(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData)).FullName)+"\"]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For each sheet &lt;string&gt;" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[in_configSheets]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="sheet" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Get Local Settings" sap2010:WorkflowViewState.IdRef="Sequence_16">
            <Sequence.Variables>
              <Variable x:TypeArguments="sd:DataTable" Name="configTable" />
            </Sequence.Variables>
            <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[configTable]" DisplayName="Read range settings" sap2010:WorkflowViewState.IdRef="ReadRange_7" SheetName="[sheet]" WorkbookPath="[in_configFile]" />
            <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[configTable]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_7">
              <ui:ForEachRow.Body>
                <ActivityAction x:TypeArguments="sd:DataRow">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                  </ActivityAction.Argument>
                  <If Condition="[NOT String.IsNullOrEmpty(row(&quot;Name&quot;).ToString.Trim)]" sap2010:WorkflowViewState.IdRef="If_9">
                    <If.Then>
                      <Assign DisplayName="Add key/value pair" sap2010:WorkflowViewState.IdRef="Assign_28">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Object">[out_Config(row("Name").ToString.Trim)]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Object">[row("Value")]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Then>
                  </If>
                </ActivityAction>
              </ui:ForEachRow.Body>
            </ui:ForEachRow>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <If Condition="[not String.IsNullOrEmpty(out_Config(&quot;Environment&quot;).ToString)]" DisplayName="If Environment is set" sap2010:WorkflowViewState.IdRef="If_16">
      <If.Then>
        <Assign DisplayName="Assign Environment from Config" sap2010:WorkflowViewState.IdRef="Assign_40">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[WorkingEnvironment]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[out_Config("Environment").ToString]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
      <If.Else>
        <Assign DisplayName="Assign Default Environment" sap2010:WorkflowViewState.IdRef="Assign_41">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[WorkingEnvironment]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">Test</InArgument>
          </Assign.Value>
        </Assign>
      </If.Else>
    </If>
    <Sequence DisplayName="Get Credential Settings" sap2010:WorkflowViewState.IdRef="Sequence_18">
      <Sequence.Variables>
        <Variable x:TypeArguments="sd:DataTable" Name="configTable" />
        <Variable x:TypeArguments="sd:DataTable" Name="credentialTable" />
      </Sequence.Variables>
      <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[credentialTable]" DisplayName="Read range settings" sap2010:WorkflowViewState.IdRef="ReadRange_8" SheetName="Credentials" WorkbookPath="[in_configFile]" />
      <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[credentialTable]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_8">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
            </ActivityAction.Argument>
            <If Condition="[NOT String.IsNullOrEmpty(row(&quot;Name&quot;).ToString.Trim)]" sap2010:WorkflowViewState.IdRef="If_10">
              <If.Then>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_17">
                  <Assign DisplayName="Add key/value pair" sap2010:WorkflowViewState.IdRef="Assign_29">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[out_Config(row("Name").ToString.Trim)]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">[row(WorkingEnvironment)]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
            </If>
          </ActivityAction>
        </ui:ForEachRow.Body>
      </ui:ForEachRow>
    </Sequence>
    <Sequence DisplayName="Get ProcessLogs" sap2010:WorkflowViewState.IdRef="Sequence_19">
      <Sequence.Variables>
        <Variable x:TypeArguments="sd:DataTable" Name="configTable" />
        <Variable x:TypeArguments="sd:DataTable" Name="processTable" />
      </Sequence.Variables>
      <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[processTable]" DisplayName="Read range settings" sap2010:WorkflowViewState.IdRef="ReadRange_9" SheetName="ProcessLogs" WorkbookPath="[in_configFile]" />
      <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[processTable]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_9">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
            </ActivityAction.Argument>
            <If Condition="[NOT String.IsNullOrEmpty(row(&quot;Name&quot;).ToString.Trim)]" DisplayName="If Name not Null - ProcessLogs" sap2010:WorkflowViewState.IdRef="If_11">
              <If.Then>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_24">
                  <Assign DisplayName="Add key/value pair" sap2010:WorkflowViewState.IdRef="Assign_30">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[processLogs(row("Name").ToString.Trim)]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">[row("Value")]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
            </If>
          </ActivityAction>
        </ui:ForEachRow.Body>
      </ui:ForEachRow>
    </Sequence>
    <Sequence DisplayName="Get ApplicationLogs" sap2010:WorkflowViewState.IdRef="Sequence_20">
      <Sequence.Variables>
        <Variable x:TypeArguments="sd:DataTable" Name="configTable" />
        <Variable x:TypeArguments="sd:DataTable" Name="applicationTable" />
      </Sequence.Variables>
      <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[applicationTable]" DisplayName="Read range settings" sap2010:WorkflowViewState.IdRef="ReadRange_10" SheetName="ApplicationLogs" WorkbookPath="[in_configFile]" />
      <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[applicationTable]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_10">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
            </ActivityAction.Argument>
            <If Condition="[NOT String.IsNullOrEmpty(row(&quot;Name&quot;).ToString.Trim)]" DisplayName="If Name and Value are not Null - ApplicationLogs" sap2010:WorkflowViewState.IdRef="If_12">
              <If.Then>
                <Assign DisplayName="Add key/value pair" sap2010:WorkflowViewState.IdRef="Assign_31">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Object">[applicationLogs(row("Name").ToString.Trim)]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Object">[row("Value")]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Then>
            </If>
          </ActivityAction>
        </ui:ForEachRow.Body>
      </ui:ForEachRow>
    </Sequence>
    <TryCatch DisplayName="Try Loading Server Assets" sap2010:WorkflowViewState.IdRef="TryCatch_5">
      <TryCatch.Try>
        <Sequence DisplayName="Loading Assets" sap2010:WorkflowViewState.IdRef="Sequence_22">
          <Sequence.Variables>
            <Variable x:TypeArguments="sd:DataTable" Name="assets" />
          </Sequence.Variables>
          <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[assets]" DisplayName="Read range Assets" sap2010:WorkflowViewState.IdRef="ReadRange_11" SheetName="Assets" WorkbookPath="[in_configFile]" />
          <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[assets]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_11">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                </ActivityAction.Argument>
                <TryCatch DisplayName="Try Get Asset" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                  <TryCatch.Try>
                    <Sequence DisplayName="Get asset value" sap2010:WorkflowViewState.IdRef="Sequence_21">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="assetValue" />
                      </Sequence.Variables>
                      <If Condition="[NOT String.IsNullOrEmpty(row(WorkingEnvironment).ToString.Trim)]" sap2010:WorkflowViewState.IdRef="If_14">
                        <If.Then>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_25">
                            <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="[row(WorkingEnvironment).ToString]" DisplayName="Get Asset Value" sap2010:WorkflowViewState.IdRef="GetRobotAsset_6">
                              <ui:GetRobotAsset.Value>
                                <OutArgument x:TypeArguments="x:String">[assetValue]</OutArgument>
                              </ui:GetRobotAsset.Value>
                            </ui:GetRobotAsset>
                            <Assign DisplayName="Set Asset Value" sap2010:WorkflowViewState.IdRef="Assign_35">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">[out_Config(row("Name").ToString)]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Object">[assetValue]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Then>
                      </If>
                    </Sequence>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                        </ActivityAction.Argument>
                        <If Condition="[String.IsNullOrEmpty(row(&quot;Name&quot;).ToString.Trim)]" DisplayName="If empty row, skip warning" sap2010:WorkflowViewState.IdRef="If_13">
                          <If.Else>
                            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Warn" Message="[&quot;Loading asset &quot; + row(&quot;Asset&quot;).ToString + &quot; failed: &quot; + exception.Message]" />
                          </If.Else>
                        </If>
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
              </ActivityAction>
            </ui:ForEachRow.Body>
          </ui:ForEachRow>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_5">
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Trace" Message="No assets defined for the process" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <Assign DisplayName="Assign RobotHomeDirectory" sap2010:WorkflowViewState.IdRef="Assign_39">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[out_RobotHomeDirectory]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[userDirectory+out_Config("RelativeRobotPath").ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:AddLogFields sap2010:Annotation.AnnotationText="Add BusinessProcessName" DisplayName="Add Process Log Fields" sap2010:WorkflowViewState.IdRef="AddLogFields_1">
      <ui:AddLogFields.Fields>
        <InArgument x:TypeArguments="x:String" x:Key="organization">[processLogs("Organization").toString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="department">[processLogs("Department").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="process">[processLogs("Process").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="processOwner">[processLogs("ProcessOwner").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="component">[processLogs("Component").ToString]</InArgument>
      </ui:AddLogFields.Fields>
    </ui:AddLogFields>
    <ui:AddLogFields sap2010:Annotation.AnnotationText="Add BusinessProcessName" DisplayName="Add Application Log Fields" sap2010:WorkflowViewState.IdRef="AddLogFields_2">
      <ui:AddLogFields.Fields>
        <InArgument x:TypeArguments="x:String" x:Key="application1">[applicationLogs("Application1").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="application1_version">[applicationLogs("Application1_version").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="application2">[applicationLogs("Application2").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="application2_version">[applicationLogs("Application2_version").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="application3">[applicationLogs("Application3").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="application3_version">[applicationLogs("Application3_version").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="application4">[applicationLogs("Application4").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="application4_version">[applicationLogs("Application4_version").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="application5">[applicationLogs("Application5").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="application5_version">[applicationLogs("Application5_version").ToString]</InArgument>
      </ui:AddLogFields.Fields>
    </ui:AddLogFields>
    <sads:DebugSymbol.Symbol>d7IBQzpcVXNlcnNcUm9iYmVydGRlUnVpanRlclxLTE0gbGF0ZXN0IGZyYW1ld29ya1xLTE0geCBDaXBoaXggRnJhbWV3b3JrIFRlbXBsYXRlcyBWMS4xXFVpUGF0aCBGcmFtZXdvcmsgVGVtcGxhdGVzXFBlcmZvcm1lclxUZW1wbGF0ZV9SRUZyYW1ld29yayBWMS4xXEZyYW1ld29ya1xJbml0QWxsU2V0dGluZ3MueGFtbHgBowEB0gEBAwFqAXsBAlgD+AIOAgEBXwVmDgMBngFnBW4OAwGaAW8Fdg4DAZYBdwV+DgMBkgF/BaIBEgIBf6MBBbgBCgIBc7kBBdYBEAIBY9cBBfQBEAIBU/UBBZACEAIBRJECBdcCEAIBJtgCBd8CDgIBIuACBegCFwIBF+kCBfYCFwIBAmRKZG0DAaEBYUthVwMBnwFsSmxtAwGdAWlLaVgDAZsBdEp0bQMBmQFxS3FcAwGXAXw3fLYBAwGVAXk4eUcDAZMBf6UBf7gBAwGQAYUBC58BFgMBgAGjAROjAV0CAXSlAQmsARICAXqvAQm2ARICAXa+AQe+Ad8BAgFtvwEH1QEXAgFk3AEH3AHcAQIBXd0BB/MBFwIBVPoBB/oB5QECAU37AQePAhcCAUWTAgnLAhQCASnTAg3TAqEBAgEn3QIw3QJoAgEl2gIx2gJJAgEj5QJF5QJrAgEg5gJC5gJlAgEe4wJD4wJnAgEc4gJF4gJrAgEa5AJA5AJhAgEY6wJF6wJvAgEV7QJF7QJvAgET7wJF7wJvAgER8AJN8AJ/AgEP8QJF8QJvAgEN7gJN7gJ/AgEL8wJF8wJvAgEJ7AJN7AJ/AgEH9AJN9AJ/AgEF8gJN8gJ/AgEDiQENiQHdAQMBiQGKAQ2eAR0DAYEBqgE0qgFYAgF9pwE1pwFJAgF7tAE0tAE4AgF5sQE1sQFJAgF3vgFCvgFVAgFxvgGwAb4BvQECAXC+AcsBvgHcAQIBbr8BOL8BSwIBa8UBDdIBEgIBZdwBQtwBUgIBYdwBrQHcAboBAgFg3AHIAdwB2QECAV7dATjdAUgCAVvjAQ3wARICAVX6AUL6AVYCAVH6AbIB+gHDAQIBUPoB0QH6AeIBAgFO+wE4+wFMAgFLgQINjAISAgFGlwILlwLUAQIBPpgCC8oCGwIBKtMCe9MCngECASiJAUiJAVcDAY4BiQGyAYkBuwEDAYwBiQHJAYkB2gEDAYoBigE+igFNAwGHAZABE5sBGAMBggHFARvFAVwCAWbHARHQARwCAWfjARvjAVwCAVblARHuARwCAVeBAhuBAlwCAUeDAhGKAhoCAUiXAkaXAlACAUKXAqoBlwKyAQIBQZcCwAGXAtEBAgE/mAI8mAJGAgE8ngIRxwIcAgErkAEhkAFiAwGDAZIBF5kBIAMBhAHIARPPARwCAWjmARPtARwCAViIAjyIAkoCAUqFAj2FAmkCAUmgAhW3AiACATC/AhnDAh4CASyXAUKXAVADAYYBlAFDlAFqAwGFAc0BPs0BVwIBasoBP8oBZgIBaesBPusBTAIBWugBP+gBZwIBWaQCF7YCHAIBMb8CJ78CZAIBLcECHcEC+QECAS6kAiWkAmgCATKmAhu0AiYCATPBAooBwQL2AQIBL6cCHasCMAIBOKwCHbMCJgIBNKkCSakCVQIBOqcCTqcCcgIBObECSLECVAIBNq4CSa4CawIBNQ==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_27" sap:VirtualizedContainerService.HintSize="574.4,60" />
      <sap2010:ViewStateData Id="Assign_33" sap:VirtualizedContainerService.HintSize="574.4,60" />
      <sap2010:ViewStateData Id="Assign_34" sap:VirtualizedContainerService.HintSize="574.4,60" />
      <sap2010:ViewStateData Id="Assign_38" sap:VirtualizedContainerService.HintSize="574.4,60" />
      <sap2010:ViewStateData Id="ReadRange_7" sap:VirtualizedContainerService.HintSize="494.4,88" />
      <sap2010:ViewStateData Id="Assign_28" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="464,209.6" />
      <sap2010:ViewStateData Id="ForEachRow_7" sap:VirtualizedContainerService.HintSize="494.4,358.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_16" sap:VirtualizedContainerService.HintSize="516.8,611.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_4" sap:VirtualizedContainerService.HintSize="574.4,745.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_40" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Assign_41" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="If_16" sap:VirtualizedContainerService.HintSize="574.4,209.6" />
      <sap2010:ViewStateData Id="ReadRange_8" sap:VirtualizedContainerService.HintSize="494.4,88" />
      <sap2010:ViewStateData Id="Assign_29" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Sequence_17" sap:VirtualizedContainerService.HintSize="265.6,184.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_10" sap:VirtualizedContainerService.HintSize="464,334.4" />
      <sap2010:ViewStateData Id="ForEachRow_8" sap:VirtualizedContainerService.HintSize="494.4,483.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_18" sap:VirtualizedContainerService.HintSize="574.4,736">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ReadRange_9" sap:VirtualizedContainerService.HintSize="494.4,88" />
      <sap2010:ViewStateData Id="Assign_30" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Sequence_24" sap:VirtualizedContainerService.HintSize="265.6,184.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_11" sap:VirtualizedContainerService.HintSize="464,334.4" />
      <sap2010:ViewStateData Id="ForEachRow_9" sap:VirtualizedContainerService.HintSize="494.4,483.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_19" sap:VirtualizedContainerService.HintSize="574.4,736">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ReadRange_10" sap:VirtualizedContainerService.HintSize="494.4,88" />
      <sap2010:ViewStateData Id="Assign_31" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="If_12" sap:VirtualizedContainerService.HintSize="464,209.6" />
      <sap2010:ViewStateData Id="ForEachRow_10" sap:VirtualizedContainerService.HintSize="494.4,358.4" />
      <sap2010:ViewStateData Id="Sequence_20" sap:VirtualizedContainerService.HintSize="574.4,611.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ReadRange_11" sap:VirtualizedContainerService.HintSize="534.4,88" />
      <sap2010:ViewStateData Id="GetRobotAsset_6" sap:VirtualizedContainerService.HintSize="243.2,22.4" />
      <sap2010:ViewStateData Id="Assign_35" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Sequence_25" sap:VirtualizedContainerService.HintSize="265.6,247.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_14" sap:VirtualizedContainerService.HintSize="464,396.8" />
      <sap2010:ViewStateData Id="Sequence_21" sap:VirtualizedContainerService.HintSize="486.4,521.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_4" sap:VirtualizedContainerService.HintSize="314.4,92.8" />
      <sap2010:ViewStateData Id="If_13" sap:VirtualizedContainerService.HintSize="464,240.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_4" sap:VirtualizedContainerService.HintSize="489.6,22.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_4" sap:VirtualizedContainerService.HintSize="504,752.8" />
      <sap2010:ViewStateData Id="ForEachRow_11" sap:VirtualizedContainerService.HintSize="534.4,901.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_22" sap:VirtualizedContainerService.HintSize="556.8,1154.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_5" sap:VirtualizedContainerService.HintSize="314.4,92.8" />
      <sap2010:ViewStateData Id="Catch`1_5" sap:VirtualizedContainerService.HintSize="560,22.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_5" sap:VirtualizedContainerService.HintSize="574.4,1385.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_39" sap:VirtualizedContainerService.HintSize="574,60" />
      <sap2010:ViewStateData Id="AddLogFields_1" sap:VirtualizedContainerService.HintSize="574,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddLogFields_2" sap:VirtualizedContainerService.HintSize="574,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_23" sap:VirtualizedContainerService.HintSize="596.8,5486.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetAllSettings_1" sap:VirtualizedContainerService.HintSize="636.8,5566.4" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>